# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop

pool:
  vmImage: 'windows-latest'
  #name: local debug

variables:
  solution: '**/source/**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)/jmeter'
  inputs:
    SourceFolder: 'jmeter'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/jmeter'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/jmeter'
    ArtifactName: 'jmeter'
    publishLocation: 'Container'
  
- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'v1.19.4'

- task: HelmInstaller@1
  inputs:
    helmVersionToInstall: '3.2.4'

- task: AzureCLI@1
  displayName: 'Get K8S credentials'
  inputs:
    azureSubscription: 'ms internal v 2'
    scriptLocation: 'inlineScript'
    inlineScript: 'az aks get-credentials --resource-group $(AKSClusterResourceGroup) --name $(AKSClusterName) --admin --overwrite-existing'

- task: AzureCLI@1
  displayName: 'Increase nodes to 3'
  inputs:
    azureSubscription: 'ms internal v 2'
    scriptLocation: 'inlineScript'
    inlineScript: 'az aks scale --resource-group $(AKSClusterResourceGroup) --name $(AKSClusterName) --node-count 3'

- task: AzurePowerShell@3
  displayName: 'jmeter_cluster_create.ps1'
  inputs:
    azureSubscription: 'ms internal v 2'
    ScriptType: 'FilePath'
    ScriptPath: 'jmeter/docker/jmeter_cluster_create.ps1'
    ScriptArguments: '-tenant $(K8SNameSpace) -ScaleSlaves $(JmeterInjectors)'
    preferredAzurePowerShellVersion: '7.1.3'

- task: AzurePowerShell@3
  displayName: Run Load Test
  inputs:
    azureSubscription: 'ms internal v 2'
    ScriptType: 'FilePath'
    ScriptPath: 'jmeter/docker/run_test.ps1'
    ScriptArguments: '-tenant jmeter -TestName ../drparts.jmx -ReportFolder loadtestresults -RedisScript ../redisscript.txt -GDuration=60'
    azurePowerShellVersion: 'LatestVersion'

- task: AzureCLI@1
  displayName: 'Decrease nodes to 1'
  inputs:
    azureSubscription: 'ms internal v 2'
    scriptLocation: 'inlineScript'
    inlineScript: 'az aks scale --resource-group $(AKSClusterResourceGroup) --name $(AKSClusterName) --node-count 1'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'jmeter/docker'
    Contents: '**/loadtestresults/**'
    TargetFolder: '$(build.artifactstagingdirectory)/results'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/results'
    ArtifactName: 'results'
    publishLocation: 'Container'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'source'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/source'

- task: Tokenization@2
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)/source'
    TargetFileNames: 'appsettings.json'
    TokenStart: '__'
    TokenEnd: '__'
     
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(Build.ArtifactStagingDirectory)/**/source/**/*.csproj'
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      Write-Host "##vso[task.uploadsummary]$(Build.SourcesDirectory)/play.md"
    errorActionPreference: 'continue'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/source'
    ArtifactName: 'Source'
    publishLocation: 'Container'

- task: CredScan@2
  inputs:
    toolMajorVersion: 'V2'